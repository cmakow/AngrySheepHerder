{"version":3,"sources":["webpack:///webpack/bootstrap ef2035e4266c35572a86","webpack:///./lib/sheep.js","webpack:///./lib/game.js","webpack:///./lib/gameview.js","webpack:///./lib/sheepclicker.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClGA;;AAEA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,KAAK;AACxB,KAAK;AACL,kBAAkB,KAAK;AACvB,KAAK;AACL;AACA;AACA;AACA,kBAAkB,KAAK,IAAI,KAAK;AAChC,OAAO;AACP,kBAAkB,KAAK,GAAG,KAAK;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC9FA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,KAAK;AACxB,KAAK;AACL,kBAAkB,KAAK;AACvB,KAAK;AACL;AACA;AACA;AACA,kBAAkB,KAAK,IAAI,KAAK;AAChC,OAAO;AACP,kBAAkB,KAAK,GAAG,KAAK;AAC/B;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,2BAA2B,gBAAgB;AAC3C,gCAAgC,mBAAmB;AACnD,8BAA8B,mBAAmB;AACjD,4BAA4B,+BAA+B;AAC3D,0BAA0B,+BAA+B;AACzD;AACA,2BAA2B,iCAAiC;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,gDAAgD;AAChD;AACA,MAAM;AACN,eAAe;AACf,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ef2035e4266c35572a86","class Sheep {\n  constructor(options = {}) {\n    this.pos = options.pos || this.generateRandomPosition();\n    this.width = options.width || 1;\n    this.img = document.getElementById('sheep');\n    this.growing = true;\n    this.clicked = false;\n\n    this.moving = options.moving || false;\n    this.direction = this.generateRandomDirection();\n    this.velocity = this.generateRandomVelocity();\n    this.xInc = this.velocity * Math.cos(this.direction);\n    this.yInc = this.velocity * Math.sin(this.direction);\n\n    this.draw = this.draw.bind(this);\n    this.move = this.move.bind(this);\n    this.checkHit = this.checkHit.bind(this);\n  }\n\n  generateRandomPosition() {\n    // multiplying by 540 to get a number between 1 and 540, add 50 so that it never goes off screen\n    // max width is 100 px so 50 px radius --> won't hit edge\n    let x = Math.floor((Math.random() * 540)) + 50;\n    let y = Math.floor((Math.random() * 380)) + 50;\n    return [x, y];\n  }\n\n  generateRandomDirection() {\n    return (Math.random() * Math.PI * 2) // returns random angle between 0 and 2pi\n  }\n\n  generateRandomVelocity() {\n    return Math.random() * 3;\n  }\n\n  move() {\n    this.checkCollision();\n    this.pos[0] += this.xInc;\n    this.pos[1] += this.yInc;\n  }\n\n  checkCollision() {\n    if(this.pos[0] + (this.width * 0.5) >= 640 && this.xInc > 0) {\n      this.xInc = -this.xInc;\n    } else if (this.pos[0] - (this.width * 0.5) <= 0 && this.xInc < 0) {\n      this.xInc = -this.xInc;\n    } else if (this.pos[1] + (this.width * 0.5) >= 480 && this.yInc > 0) {\n      this.yInc = -this.yInc;\n    } else if (this.pos[1] - (this.width * 0.5) <= 0 && this.yInc < 0) {\n      this.yInc = -this.yInc;\n    }\n  }\n\n  checkHit(e) {\n    e.preventDefault();\n    const xDist = e.layerX - this.pos[0];\n    const yDist = e.layerY - this.pos[1];\n    const directDist = Math.sqrt(xDist ** 2 + yDist ** 2)\n    if ((this.width * 0.5) > directDist) {\n      this.width = 0;\n      this.clicked = true;\n      return true;\n    }\n  }\n\n  draw(ctx) {\n    if (this.width > 0) {\n      if(this.moving) {\n        this.move();\n      }\n      ctx.drawImage(this.img, this.pos[0] - this.width/2, this.pos[1] - this.width/2, this.width, this.width);\n\n      // shows hitbox, play with radius of circle\n\n      // ctx.strokeStyle = 'red';\n      // ctx.beginPath();\n      // ctx.arc(this.pos[0], this.pos[1], this.width * 0.50, 0, 2*Math.PI, false)\n      // ctx.stroke();\n\n      // shows center of sheep\n\n      // ctx.fillStyle='red';\n      // ctx.beginPath();\n      // ctx.arc(this.pos[0], this.pos[1], 5, 0, 2 * Math.PI, false);\n      // ctx.fill();\n\n      if(this.growing) {\n        this.width += 1.5;\n        if(this.width >= 100) {\n          this.growing = false;\n        }\n      } else {\n        this.width -= 1.5;\n      }\n    }\n  }\n}\n\nmodule.exports = Sheep;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sheep.js\n// module id = 0\n// module chunks = 0","const Sheep = require('./sheep');\n\nclass Game {\n  constructor(options = {}) {\n    this.accuracy = 0;\n    this.totalClicks = 0;\n\n    this.time = 0;\n    this.score = 0;\n    this.lives = options.lives || 3;\n    this.interval = options.interval || 600;\n\n    this.moving = options.moving || false;\n\n    this.escapedSheep = [];\n    this.sheep = [];\n\n    this.background = document.getElementById('background');\n\n    this.addSheep = this.addSheep.bind(this);\n    this.loseLife = this.loseLife.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.sheepAdder = this.sheepAdder.bind(this);\n    this.incrementDifficulty = this.incrementDifficulty.bind(this);\n    this.incrementTime = this.incrementTime.bind(this);\n    this.calculateAccuracy = this.calculateAccuracy.bind(this);\n  }\n\n  addSheep(sheep) {\n    this.sheep.push(sheep);\n  }\n\n  loseLife(sheep) {\n    this.lives -= 1;\n    this.escapedSheep.push(sheep);\n  }\n\n  sheepAdder() {\n    this.addSheep(new Sheep({moving: this.moving}));\n    if(this.lives > 0) {\n      setTimeout(this.sheepAdder, this.interval)\n    }\n  }\n\n  onClick(e) {\n    let hit = false;\n    for(let i = 0; i < this.sheep.length; i++) {\n      if(this.sheep[i].checkHit(e)) {\n        this.score += 1;\n        hit = true;\n        break;\n      }\n    }\n    if(!hit) {\n      // render black circle? noise?\n      // Add to miss array that will render for x frames before disappearing?\n    }\n    this.totalClicks += 1;\n    this.calculateAccuracy();\n  }\n\n  incrementDifficulty() {\n    if(this.interval === 200) {\n      return null;\n    } else {\n      this.interval -= 100;\n    }\n  }\n\n  incrementTime() {\n    this.time += 1;\n  }\n\n  parseTime(time) {\n    if(time < 10) {\n      return `0:0${time}`;\n    } else if (time < 60) {\n      return `0:${time}`;\n    } else {\n      const mins = Math.floor(time / 60);\n      const secs = Math.floor(time % 60);\n      if(secs < 10) {\n        return `${mins}:0${secs}`;\n      } else {\n        return `${mins}:${secs}`;\n      }\n    }\n  }\n\n  calculateAccuracy() {\n    this.accuracy = Math.floor((this.score / this.totalClicks) * 100);\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Sheep = require('./sheep');\nconst Game = require('./game');\n\nclass GameView {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.background = document.getElementById('background');\n\n    this.setup = this.setup.bind(this);\n    this.gameStart = this.gameStart.bind(this);\n    this.renderSheep = this.renderSheep.bind(this);\n    this.renderScore = this.renderScore.bind(this);\n    this.renderGameOver = this.renderGameOver.bind(this);\n    this.renderMissedSheep = this.renderMissedSheep.bind(this);\n    this.render = this.render.bind(this);\n    this.setupGame = this.setupGame.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  drawButton(ctx, x, y, width, height, radius) {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  resetGame(e) {\n    if(e.layerX >= 220 && e.layerX <= 420 && e.layerY >= 269 && e.layerY <= 332) {\n      this.setup();\n    }\n  }\n\n  setup() {\n    this.canvas.removeEventListener('click', this.resetGame);\n    const ctx = this.ctx;\n\n    ctx.drawImage(this.background, 0, 0, 815, 480);\n    ctx.fillStyle = 'yellow';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 4;\n    ctx.font = '30px arial';\n    ctx.strokeText('Angry Sheep Herder', 183, 200);\n    ctx.fillText('Angry Sheep Herder', 183, 200);\n    ctx.strokeText('Click a button to play!', 175, 250);\n    ctx.fillText('Click a button to play!', 175, 250);\n    this.drawButton(ctx, 110, 300, 200, 80, 5);\n    this.drawButton(ctx, 330, 300, 200, 80, 5);\n    ctx.fillStyle = 'black';\n    ctx.fillText('Normal', 161, 350);\n    ctx.fillText('Hard', 397, 350);\n    this.canvas.addEventListener('click', this.gameStart);\n  }\n\n  gameStart(e) {\n    if(e.layerX >= 110 && e.layerX <= 310 && e.layerY >= 300 && e.layerY <= 380) {\n      this.setupGame(false);\n    } else if (e.layerX >= 330 && e.layerX <= 530 && e.layerY >= 300 && e.layerY <= 380) {\n      this.setupGame(true);\n    }\n  }\n\n  setupGame(moving) {\n    this.canvas.removeEventListener('click', this.gameStart);\n    this.game = new Game({moving: moving});\n    this.canvas.addEventListener('click', this.game.onClick);\n    let play = setInterval(() => {\n      this.render(); // render array of sheep to canvas\n      if (this.game.interval === 200) {\n        clearInterval(this.diffInterval);\n      }\n      if (this.game.lives === 0) {\n        clearInterval(play);\n        clearInterval(this.timeInterval);\n        clearInterval(this.diffInterval);\n        this.renderGameOver();\n      }\n    }, 30);\n\n    // time incrementer\n    this.timeInterval = setInterval(this.game.incrementTime, 1000);\n\n    // decrease interval between sheep spawning every 10 seconds\n    this.diffInterval = setInterval(this.game.incrementDifficulty, 10000);\n    setTimeout(this.game.sheepAdder, this.game.interval);\n  }\n\n  parseTime(time) {\n    if(time < 10) {\n      return `0:0${time}`;\n    } else if (time < 60) {\n      return `0:${time}`;\n    } else {\n      const mins = Math.floor(time / 60);\n      const secs = Math.floor(time % 60);\n      if(secs < 10) {\n        return `${mins}:0${secs}`;\n      } else {\n        return `${mins}:${secs}`;\n      }\n    }\n  }\n\n  parseLives(lives) {\n    let livesString = \"\";\n    for(let i = 0; i < lives; i++) {\n      livesString += '♥'\n    }\n    return livesString;\n  }\n\n  renderScore() {\n    const ctx = this.ctx;\n\n    ctx.fillStyle = 'yellow';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 4;\n    ctx.font = '22px arial';\n    ctx.strokeText(`Score: ${this.game.score}`, 10, 25);\n    ctx.fillText(`Score: ${this.game.score}`, 10, 25);\n    ctx.strokeText(`Accuracy: ${this.game.accuracy}%`, 10, 50);\n    ctx.fillText(`Accuracy: ${this.game.accuracy}%`, 10, 50);\n    ctx.strokeText(`Time: ${this.parseTime(this.game.time)}`, 520, 25);\n    ctx.fillText(`Time: ${this.parseTime(this.game.time)}`, 520, 25);\n    ctx.strokeText(`Lives:`, 520, 50);\n    ctx.fillText(`Lives: ${this.parseLives(this.game.lives)}`, 520, 50);\n  }\n\n  renderMissedSheep() {\n    const ctx = this.ctx;\n\n    this.game.escapedSheep.forEach((sheep) => {\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n      ctx.arc(sheep.pos[0], sheep.pos[1], 5, 0, 2*Math.PI, false);\n      ctx.fill();\n    })\n  }\n\n  renderSheep() {\n    const ctx = this.ctx;\n\n    for(let i = 0; i < this.game.sheep.length; i++) {\n      if(this.game.sheep[i].width <= 0) {\n        if(this.game.sheep[i].clicked) {\n          // this.score += 1;\n        } else {\n          this.game.loseLife(this.game.sheep[i]);\n        }\n        this.game.sheep.splice(i, 1);\n        i -= 1;\n      } else {\n        this.game.sheep[i].draw(ctx);\n      }\n    }\n  }\n\n  render() {\n    const ctx = this.ctx;\n\n    // clear canvas with background img\n    ctx.drawImage(this.background, 0, 0, 815, 480);\n\n    this.renderScore();\n\n    this.renderSheep();\n\n    this.renderMissedSheep();\n  }\n\n\n  renderGameOver() {\n    let scoreXpos;\n    if(this.game.score > 99) {\n      scoreXpos = 166;\n    } else if (this.game.score > 9) {\n      scoreXpos = 173;\n    } else {\n      scoreXpos = 182;\n    }\n\n    const canvas = this.canvas;\n    const ctx = this.ctx;\n    canvas.removeEventListener('click', this.game.onClick);\n    ctx.fillStyle = 'yellow';\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 4;\n    ctx.font = '30px arial';\n    ctx.strokeText('Game Over!', 237, 200);\n    ctx.fillText('Game Over!', 237, 200);\n    ctx.strokeText(`You herded ${this.game.score} sheep!`, scoreXpos, 250);\n    ctx.fillText(`You herded ${this.game.score} sheep!`, scoreXpos, 250);\n    this.drawButton(ctx, 220, 270, 200, 60, 5);\n    ctx.fillStyle = 'black';\n    ctx.fillText('Play again!', 245, 310);\n    ctx.fillStyle = 'yellow';\n    canvas.addEventListener('click', this.resetGame);\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gameview.js\n// module id = 2\n// module chunks = 0","const Sheep = require('./sheep');\nconst Game = require('./game');\nconst GameView = require('./gameview');\n\nfunction waitForElement(id, callback){\n    var x = setInterval(function(){\n        if(document.getElementById(id)){\n            clearInterval(x);\n            callback();\n        }\n    }, 30);\n}\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  const canvasEl = document.getElementById('canvas');\n  const ctx = canvasEl.getContext('2d');\n  canvasEl.width = '640';\n  canvasEl.height = '480';\n\n  const f = new GameView(canvasEl, ctx);\n\n  waitForElement('background', () => {\n    f.setup();\n  })\n\n  // const background = document.getElementById('background');\n  // background.addEventListener('load', () => { //breaks half the time\n  //   f.setup();\n  // })\n  // f.setup(); //breaks the other half of the time\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sheepclicker.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}